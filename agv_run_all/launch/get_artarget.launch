<launch>

    <param name="/use_sim_time" value="false"/>
    
    <!-- 开启相对运动节点 -->
    <node pkg="agv_relative_move" type="reltive_move" name="reltive_move" output="screen">
        
    </node>

    <!-- ar码识别节点 -->
    <arg name="marker_size" default="20.2" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />
        
	<arg name="cam_image_topic" default="/camera1/color/image_raw" />
	<arg name="cam_info_topic" default="/camera1/color/camera_info" />
	
	<!-- camera_link_fake -->
	<!-- link_camera -->
	<arg name="output_frame" default="camera1_link" />
	<!-- <arg name="bundle_files" default="$(find ar_track_alvar)/bundles/truthTableLeg_test.xml" /> -->

	<!-- <node name="ar_track_alvar" pkg="ar_track_alvar" type="findMarkerBundlesNoKinect" respawn="false" output="screen">
		<param name="marker_size"           type="double" value="$(arg marker_size)" />
		<param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
		<param name="max_track_error"       type="double" value="$(arg max_track_error)" />
		<param name="output_frame"          type="string" value="$(arg output_frame)" />
		<param name="bundle_files"          type="string" value="$(arg bundle_files)" />

		<remap from="camera_image"  to="$(arg cam_image_topic)" />
		<remap from="camera_info"   to="$(arg cam_info_topic)" />
	</node> -->


	<node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen">
		<param name="marker_size"           type="double" value="$(arg marker_size)" />
		<param name="max_new_marker_error"  type="double" value="$(arg max_new_marker_error)" />
		<param name="max_track_error"       type="double" value="$(arg max_track_error)" />
		<param name="output_frame"          type="string" value="$(arg output_frame)" />

		<remap from="camera_image"  to="$(arg cam_image_topic)" />
		<remap from="camera_info"   to="$(arg cam_info_topic)" />
	</node>




    <!-- 设置地图的配置文件 -->
    <arg name="map" default="real_map.yaml" />
    <!-- 运行地图服务器，并且加载设置的地图-->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find agvsim_navigation)/maps/$(arg map)">
        <param name="frame_id" value="map"></param>
    </node>

      <!-- urdf参数 -->
  <!-- 加载机器人参数 -->
  <param name="robot_description" textfile="$(find agv_real)/urdf/agv_real.urdf" />


  <!-- <node pkg="joint_state_publisher" name="joint_state_publisher" type="joint_state_publisher"
  /> -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
    <remap from="/joint_states" to="/agv_sim/joint_states"/>
  </node>

    <!-- 启动AMCL定位节点 -->
    <include file="$(find agvsim_navigation)/launch/amcl.launch" />
    <!-- 运行rviz -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find agvsim_navigation)/rviz/navigation.rviz" output="screen"/>
    <!-- 参数实时修改 -->
    <node pkg="rqt_reconfigure" type="rqt_reconfigure" name="rqt_reconfigure" />

    <!-- 启动局部规划器和全局规划器 -->
    <include file="$(find agvsim_navigation)/launch/move_base.launch" />

    <!-- 几何参数 -->
    <rosparam file="$(find agv_sim_roscontrol)/config/agv_geometry_param_new.yaml" command="load"></rosparam>
    <!-- 硬件抽象层关节信息加载 -->
    <rosparam file="$(find agv_hw)/config/agv_hw.yaml" command="load"></rosparam>
  
    <!-- 加载控制器，一定不能用ns参数，直接用绝对参数路径才能搞定 -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="true"
    output="screen" ns="/" args="
      /agv_sim/turn_wheels_controller" />

    <!-- 启动机器人所有硬件 -->
    <include file="$(find agv_run_all)/launch/agv_real.launch" />
    <!-- 启动硬件抽象层 -->
    <node pkg="agv_hw" type="agv_hw_node" name="agv_hw_node" output="screen">
    </node>

  <!-- <node pkg="tf" type = "static_transform_publisher" name="static_transform_publisher" args="0 0 0 0 0 0 1 map odom 100"/> -->

  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom_com" />
    <param name="base_footprint_frame" value="base_footprint" />
    <param name="freq" value="300.0" />
    <param name="sensor_timeout" value="1.0" />
    <param name="odom_used" value="true" />
    <param name="imu_used" value="true" />
    <param name="vo_used" value="false" />
    <param name="topic_imu" value="/IMU_data" />
  </node>

  <!-- 打开状态机 -->
  <node pkg="hfsm" type="hfsm_node" name="hfsm_node" output="screen" />


</launch>
